{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "add", "function_summary": "Adds two numbers and returns the result", "function_content": "int add(int a, int b) { return a + b; }", "is_correct": true, "confidence_score": 0.8, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: Adds two numbers and returns the result\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-NET-003", "requirement_text": "Connect to remote host", "function_name": "Network::Socket::connect", "function_summary": "Establishes a connection to a remote host", "function_content": "bool Socket::connect() {\n    std::cout << \"Connecting to \" << host_ << \":\" << port_ << \"...\" << std::endl;\n    state_ = SocketState::CONNECTING;\n    // Connection logic here\n    state_ = SocketState::CONNECTED;\n    return true;\n}", "is_correct": true, "confidence_score": 0.9, "prompt": "Given the following requirement:\n\nRequirement: Connect to remote host\n\nAnd this function summary:\n\nFunction Summary: Establishes a connection to a remote host\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-SEC-002", "requirement_text": "Encrypt data", "function_name": "Security::Encryptor::encrypt", "function_summary": "Encrypts plaintext data into ciphertext", "function_content": "std::vector<uint8_t> encrypt(const std::vector<uint8_t>& plaintext) {\n    if (!initialized_) {\n        throw std::runtime_error(\"Encryptor not initialized\");\n    }\n    // Encryption logic here\n    return ciphertext;\n}", "is_correct": true, "confidence_score": 0.85, "prompt": "Given the following requirement:\n\nRequirement: Encrypt data\n\nAnd this function summary:\n\nFunction Summary: Encrypts plaintext data into ciphertext\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "Logger::log", "function_summary": "Logs a message to the system log", "function_content": "void log(const std::string& message) { std::cout << message << std::endl; }", "is_correct": false, "confidence_score": 0.2, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: Logs a message to the system log\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": -1.0}
{"requirement_id": "REQ-NET-003", "requirement_text": "Connect to remote host", "function_name": "DataRecord::addField", "function_summary": "Adds a field to a data record", "function_content": "DataRecord& DataRecord::addField(const std::string& name, \n                               const std::string& value, \n                               const std::string& type) {\n    fields_[name] = {name, value, type};\n    return *this;\n}", "is_correct": false, "confidence_score": 0.1, "prompt": "Given the following requirement:\n\nRequirement: Connect to remote host\n\nAnd this function summary:\n\nFunction Summary: Adds a field to a data record\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": -1.0}
{"requirement_id": "REQ-SEC-009", "requirement_text": "Validate encryption key", "function_name": "Security::AESEncryptor::setKey", "function_summary": "Sets the encryption key for AES encryption", "function_content": "bool setKey(const std::vector<uint8_t>& key) {\n    // Check key length\n    if (key.size() != requiredKeySize) {\n        return false;\n    }\n    key_ = key;\n    initialized_ = true;\n    return true;\n}", "is_correct": true, "confidence_score": 0.6, "prompt": "Given the following requirement:\n\nRequirement: Validate encryption key\n\nAnd this function summary:\n\nFunction Summary: Sets the encryption key for AES encryption\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-APP-004", "requirement_text": "Load user preferences", "function_name": "BaseEncryptor", "function_summary": "BaseEncryptor from security module", "function_content": "BaseEncryptor(EncryptionAlgorithm::RSA) {\n            std::cout << \"Created RSA encryptor\" << std::endl;\n        }", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: Load user preferences\n\nAnd this function summary:\n\nFunction Summary: BaseEncryptor from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-018", "requirement_text": "TCP server accept", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: TCP server accept\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-005", "requirement_text": "Send data over socket", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: Send data over socket\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-006", "requirement_text": "Serialize record to string", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Serialize record to string\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-011", "requirement_text": "TCP socket destruction", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: TCP socket destruction\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-012", "requirement_text": "TCP connection", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: TCP connection\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MAIN-001", "requirement_text": "Main application entry point", "function_name": "int main", "function_summary": "int main implementation from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Main application entry point\n\nAnd this function summary:\n\nFunction Summary: int main implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-APP-003", "requirement_text": "Process command", "function_name": "is256Bit_", "function_summary": "is256Bit_ from security module", "function_content": "is256Bit_(use256Bit) {\n            std::cout << \"Created AES-\" << (use256Bit ? \"256\" : \"128\") << \" encryptor\" << std::endl;\n        }", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Process command\n\nAnd this function summary:\n\nFunction Summary: is256Bit_ from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-011", "requirement_text": "TCP socket destruction", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: TCP socket destruction\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-009", "requirement_text": "Create socket of specified type", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Create socket of specified type\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-001", "requirement_text": "Encryptor cleanup", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: Encryptor cleanup\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-002", "requirement_text": "Socket cleanup", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 13, "prompt": "Given the following requirement:\n\nRequirement: Socket cleanup\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-009", "requirement_text": "Validate encryption key", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 0, "prompt": "Given the following requirement:\n\nRequirement: Validate encryption key\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-001", "requirement_text": "String concatenation utility", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: String concatenation utility\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-003", "requirement_text": "Process command", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 7, "prompt": "Given the following requirement:\n\nRequirement: Process command\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-011", "requirement_text": "RSA encryption implementation", "function_name": "bool setKey", "function_summary": "bool setKey implementation from security module", "function_content": "bool setKey(const std::vector<uint8_t>& key) override {\n            // In a real implementation, this would parse a proper RSA key\n            // For demonstration, we'll just split the key in half\n            if (key.size() < 64) {  // Arbitrary minimum size\n                std::cerr << \"RSA key too small, minimum 64 bytes required\" << std::endl;\n                return false;\n            }\n            \n            size_t halfSize = key.size() / 2;\n            publicKey_.assign(key.begin(), key.begin() + halfSize);\n            privateKey_.assign(key.begin() + halfSize, key.end());\n            initialized_ = true;\n            std::cout << \"RSA key set successfully\" << std::endl;\n            return true;\n        }", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: RSA encryption implementation\n\nAnd this function summary:\n\nFunction Summary: bool setKey implementation from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-DATA-002", "requirement_text": "Add field to data record", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 18, "prompt": "Given the following requirement:\n\nRequirement: Add field to data record\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-008", "requirement_text": "Process data records", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 8, "prompt": "Given the following requirement:\n\nRequirement: Process data records\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-011", "requirement_text": "RSA encryption implementation", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 13, "prompt": "Given the following requirement:\n\nRequirement: RSA encryption implementation\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-012", "requirement_text": "Create data processor", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: Create data processor\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-008", "requirement_text": "Generate encryption key", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: Generate encryption key\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-013", "requirement_text": "Register custom processor", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 8, "prompt": "Given the following requirement:\n\nRequirement: Register custom processor\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-002", "requirement_text": "Socket cleanup", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: Socket cleanup\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-005", "requirement_text": "Send data over socket", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 18, "prompt": "Given the following requirement:\n\nRequirement: Send data over socket\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-017", "requirement_text": "TCP server listen", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: TCP server listen\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-013", "requirement_text": "Register custom processor", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: Register custom processor\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-003", "requirement_text": "Get field value by name", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 3, "prompt": "Given the following requirement:\n\nRequirement: Get field value by name\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-008", "requirement_text": "Generate encryption key", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: Generate encryption key\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-006", "requirement_text": "Receive data from socket", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: Receive data from socket\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-001", "requirement_text": "Socket initialization", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 13, "prompt": "Given the following requirement:\n\nRequirement: Socket initialization\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-002", "requirement_text": "Convert string to uppercase", "function_name": "std::string toUpper", "function_summary": "string toUpper implementation from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: string toUpper implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-APP-001", "requirement_text": "Application initialization", "function_name": "bool initializeApp", "function_summary": "bool initializeApp implementation from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Application initialization\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp implementation from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-DATA-006", "requirement_text": "Serialize record to string", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: Serialize record to string\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-011", "requirement_text": "Get processor native format", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Get processor native format\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-001", "requirement_text": "String concatenation utility", "function_name": "std::string toUpper", "function_summary": "string toUpper implementation from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: String concatenation utility\n\nAnd this function summary:\n\nFunction Summary: string toUpper implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-APP-001", "requirement_text": "Application initialization", "function_name": "BaseEncryptor", "function_summary": "BaseEncryptor from security module", "function_content": "BaseEncryptor(EncryptionAlgorithm::RSA) {\n            std::cout << \"Created RSA encryptor\" << std::endl;\n        }", "is_correct": false, "confidence_score": 7, "prompt": "Given the following requirement:\n\nRequirement: Application initialization\n\nAnd this function summary:\n\nFunction Summary: BaseEncryptor from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-010", "requirement_text": "AES encryption implementation", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 16, "prompt": "Given the following requirement:\n\nRequirement: AES encryption implementation\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-015", "requirement_text": "TCP data receiving", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: TCP data receiving\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-014", "requirement_text": "TCP data sending", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: TCP data sending\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-011", "requirement_text": "RSA encryption implementation", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: RSA encryption implementation\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-010", "requirement_text": "AES encryption implementation", "function_name": "is256Bit_", "function_summary": "is256Bit_ implementation from security module", "function_content": "is256Bit_(use256Bit) {\n            std::cout << \"Created AES-\" << (use256Bit ? \"256\" : \"128\") << \" encryptor\" << std::endl;\n        }", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: AES encryption implementation\n\nAnd this function summary:\n\nFunction Summary: is256Bit_ implementation from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-DATA-003", "requirement_text": "Get field value by name", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 11, "prompt": "Given the following requirement:\n\nRequirement: Get field value by name\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-008", "requirement_text": "Process data records", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: Process data records\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-001", "requirement_text": "Socket initialization", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 10, "prompt": "Given the following requirement:\n\nRequirement: Socket initialization\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-010", "requirement_text": "TCP socket construction", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: TCP socket construction\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-002", "requirement_text": "Convert string to uppercase", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-010", "requirement_text": "AES encryption implementation", "function_name": "bool setKey", "function_summary": "bool setKey implementation from security module", "function_content": "bool setKey(const std::vector<uint8_t>& key) override {\n            // Check key length\n            size_t requiredKeySize = is256Bit_ ? 32 : 16;  // 256 bits = 32 bytes, 128 bits = 16 bytes\n            if (key.size() != requiredKeySize) {\n                std::cerr << \"Invalid key size for AES-\" << (is256Bit_ ? \"256\" : \"128\") \n                          << \". Expected \" << requiredKeySize << \" bytes, got \" \n                          << key.size() << \" bytes.\" << std::endl;\n                return false;\n            }\n            \n            key_ = key;\n            initialized_ = true;\n            std::cout << \"AES key set successfully\" << std::endl;\n            return true;\n        }", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: AES encryption implementation\n\nAnd this function summary:\n\nFunction Summary: bool setKey implementation from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-MATH-003", "requirement_text": "Multiplication function", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 7, "prompt": "Given the following requirement:\n\nRequirement: Multiplication function\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-003", "requirement_text": "Decrypt data", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Decrypt data\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-013", "requirement_text": "TCP disconnection", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 10, "prompt": "Given the following requirement:\n\nRequirement: TCP disconnection\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-006", "requirement_text": "Receive data from socket", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 18, "prompt": "Given the following requirement:\n\nRequirement: Receive data from socket\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-010", "requirement_text": "TCP socket construction", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 18, "prompt": "Given the following requirement:\n\nRequirement: TCP socket construction\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-007", "requirement_text": "Get socket state", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: Get socket state\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-004", "requirement_text": "Get all fields in record", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 0, "prompt": "Given the following requirement:\n\nRequirement: Get all fields in record\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-002", "requirement_text": "Application shutdown", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 11, "prompt": "Given the following requirement:\n\nRequirement: Application shutdown\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-005", "requirement_text": "Set encryption key", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: Set encryption key\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-008", "requirement_text": "Set socket options", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 11, "prompt": "Given the following requirement:\n\nRequirement: Set socket options\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-002", "requirement_text": "Subtraction function", "function_name": "bool setKey", "function_summary": "bool setKey from security module", "function_content": "bool setKey(const std::vector<uint8_t>& key) override {\n            // Check key length\n            size_t requiredKeySize = is256Bit_ ? 32 : 16;  // 256 bits = 32 bytes, 128 bits = 16 bytes\n            if (key.size() != requiredKeySize) {\n                std::cerr << \"Invalid key size for AES-\" << (is256Bit_ ? \"256\" : \"128\") \n                          << \". Expected \" << requiredKeySize << \" bytes, got \" \n                          << key.size() << \" bytes.\" << std::endl;\n                return false;\n            }\n            \n            key_ = key;\n            initialized_ = true;\n            std::cout << \"AES key set successfully\" << std::endl;\n            return true;\n        }", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: Subtraction function\n\nAnd this function summary:\n\nFunction Summary: bool setKey from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-011", "requirement_text": "Get processor native format", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Get processor native format\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-005", "requirement_text": "Set encryption key", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: Set encryption key\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-008", "requirement_text": "Set socket options", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: Set socket options\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-003", "requirement_text": "String splitting function", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: String splitting function\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "int add", "function_summary": "int add implementation from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: int add implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-SEC-003", "requirement_text": "Decrypt data", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 12, "prompt": "Given the following requirement:\n\nRequirement: Decrypt data\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-002", "requirement_text": "Application shutdown", "function_name": "std::string processCommand", "function_summary": "string processCommand implementation from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Application shutdown\n\nAnd this function summary:\n\nFunction Summary: string processCommand implementation from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-NET-007", "requirement_text": "Get socket state", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 11, "prompt": "Given the following requirement:\n\nRequirement: Get socket state\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-001", "requirement_text": "Application initialization", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 8, "prompt": "Given the following requirement:\n\nRequirement: Application initialization\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 8, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-002", "requirement_text": "Application shutdown", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp implementation from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Application shutdown\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp implementation from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-MATH-003", "requirement_text": "Multiplication function", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: Multiplication function\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-016", "requirement_text": "TCP No-Delay option", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 12, "prompt": "Given the following requirement:\n\nRequirement: TCP No-Delay option\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-002", "requirement_text": "Subtraction function", "function_name": "int multiply", "function_summary": "int multiply implementation from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Subtraction function\n\nAnd this function summary:\n\nFunction Summary: int multiply implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-DATA-002", "requirement_text": "Add field to data record", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: Add field to data record\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-013", "requirement_text": "TCP disconnection", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 3, "prompt": "Given the following requirement:\n\nRequirement: TCP disconnection\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-001", "requirement_text": "Application initialization", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp implementation from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Application initialization\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp implementation from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-SEC-010", "requirement_text": "AES encryption implementation", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 12, "prompt": "Given the following requirement:\n\nRequirement: AES encryption implementation\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-006", "requirement_text": "Check encryptor initialization", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: Check encryptor initialization\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-007", "requirement_text": "Create encryptor factory", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Create encryptor factory\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-005", "requirement_text": "Check field existence", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: Check field existence\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-004", "requirement_text": "Division function", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 16, "prompt": "Given the following requirement:\n\nRequirement: Division function\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-015", "requirement_text": "TCP data receiving", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: TCP data receiving\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-002", "requirement_text": "Encrypt data", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 9, "prompt": "Given the following requirement:\n\nRequirement: Encrypt data\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-001", "requirement_text": "String concatenation utility", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: String concatenation utility\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-009", "requirement_text": "Validate encryption key", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Validate encryption key\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-005", "requirement_text": "Check field existence", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 7, "prompt": "Given the following requirement:\n\nRequirement: Check field existence\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-003", "requirement_text": "Multiplication function", "function_name": "int multiply", "function_summary": "int multiply implementation from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Multiplication function\n\nAnd this function summary:\n\nFunction Summary: int multiply implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-APP-004", "requirement_text": "Load user preferences", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Load user preferences\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-004", "requirement_text": "Get encryption algorithm", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 12, "prompt": "Given the following requirement:\n\nRequirement: Get encryption algorithm\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-009", "requirement_text": "Create socket of specified type", "function_name": "int main", "function_summary": "int main from cpp_samples module", "function_content": "int main() {\n    // Initialize the application\n    if (!initializeApp(\"config.json\")) {\n        return 1;\n    }\n\n    // Demonstrate math functions\n    int sum = add(5, 3);\n    int difference = subtract(10, 4);\n    int product = multiply(6, 7);\n    \n    std::cout << \"Math results: \" << sum << \", \" << difference << \", \" << product << std::endl;\n    \n    // Demonstrate string utilities\n    std::string combined = concat(\"Hello, \", \"World!\");\n    std::string uppercase = toUpper(combined);\n    \n    std::cout << \"String results: \" << combined << \" -> \" << uppercase << std::endl;\n    \n    // Process a command\n    std::string result = processCommand(\"REPORT\");\n    std::cout << \"Command result: \" << result << std::endl;\n    \n    // Shutdown the application\n    shutdownApp();\n    \n    return 0;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Create socket of specified type\n\nAnd this function summary:\n\nFunction Summary: int main from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-010", "requirement_text": "Configure data processor", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: Configure data processor\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-003", "requirement_text": "Process command", "function_name": "std::string processCommand", "function_summary": "string processCommand implementation from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Process command\n\nAnd this function summary:\n\nFunction Summary: string processCommand implementation from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-MAIN-001", "requirement_text": "Main application entry point", "function_name": "bool setKey", "function_summary": "bool setKey from security module", "function_content": "bool setKey(const std::vector<uint8_t>& key) override {\n            // In a real implementation, this would parse a proper RSA key\n            // For demonstration, we'll just split the key in half\n            if (key.size() < 64) {  // Arbitrary minimum size\n                std::cerr << \"RSA key too small, minimum 64 bytes required\" << std::endl;\n                return false;\n            }\n            \n            size_t halfSize = key.size() / 2;\n            publicKey_.assign(key.begin(), key.begin() + halfSize);\n            privateKey_.assign(key.begin() + halfSize, key.end());\n            initialized_ = true;\n            std::cout << \"RSA key set successfully\" << std::endl;\n            return true;\n        }", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Main application entry point\n\nAnd this function summary:\n\nFunction Summary: bool setKey from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-004", "requirement_text": "Disconnect from remote host", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 10, "prompt": "Given the following requirement:\n\nRequirement: Disconnect from remote host\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-017", "requirement_text": "TCP server listen", "function_name": "int add", "function_summary": "int add from cpp_samples module", "function_content": "int add(int a, int b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: TCP server listen\n\nAnd this function summary:\n\nFunction Summary: int add from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-007", "requirement_text": "Create encryptor factory", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: Create encryptor factory\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-004", "requirement_text": "Get encryption algorithm", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: Get encryption algorithm\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-003", "requirement_text": "Connect to remote host", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 1, "prompt": "Given the following requirement:\n\nRequirement: Connect to remote host\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-002", "requirement_text": "Subtraction function", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: Subtraction function\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-018", "requirement_text": "TCP server accept", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: TCP server accept\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "int subtract", "function_summary": "int subtract implementation from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: int subtract implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-MAIN-001", "requirement_text": "Main application entry point", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 20, "prompt": "Given the following requirement:\n\nRequirement: Main application entry point\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-009", "requirement_text": "Validate data record", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: Validate data record\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-001", "requirement_text": "Create empty data record", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 11, "prompt": "Given the following requirement:\n\nRequirement: Create empty data record\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-014", "requirement_text": "TCP data sending", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 19, "prompt": "Given the following requirement:\n\nRequirement: TCP data sending\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-001", "requirement_text": "Addition function", "function_name": "int multiply", "function_summary": "int multiply implementation from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Addition function\n\nAnd this function summary:\n\nFunction Summary: int multiply implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-NET-004", "requirement_text": "Disconnect from remote host", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 7, "prompt": "Given the following requirement:\n\nRequirement: Disconnect from remote host\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-001", "requirement_text": "String concatenation utility", "function_name": "std::string concat", "function_summary": "string concat implementation from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: String concatenation utility\n\nAnd this function summary:\n\nFunction Summary: string concat implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-MATH-002", "requirement_text": "Subtraction function", "function_name": "int subtract", "function_summary": "int subtract implementation from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: Subtraction function\n\nAnd this function summary:\n\nFunction Summary: int subtract implementation from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-SEC-002", "requirement_text": "Encrypt data", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Encrypt data\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-009", "requirement_text": "Validate data record", "function_name": "int subtract", "function_summary": "int subtract from cpp_samples module", "function_content": "int subtract(int a, int b) {\n    return a - b;\n}", "is_correct": false, "confidence_score": 10, "prompt": "Given the following requirement:\n\nRequirement: Validate data record\n\nAnd this function summary:\n\nFunction Summary: int subtract from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-012", "requirement_text": "TCP connection", "function_name": "std::string processCommand", "function_summary": "std::string processCommand from core module", "function_content": "std::string processCommand(const std::string& command) {\n    std::cout << \"Processing command: \" << command << std::endl;\n    // Implementation would interpret and execute the command\n    return \"Command processed: \" + command;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: TCP connection\n\nAnd this function summary:\n\nFunction Summary: std::string processCommand from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-MATH-004", "requirement_text": "Division function", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: Division function\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-007", "requirement_text": "Data processor cleanup", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 12, "prompt": "Given the following requirement:\n\nRequirement: Data processor cleanup\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-012", "requirement_text": "Create data processor", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: Create data processor\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-001", "requirement_text": "Encryptor cleanup", "function_name": "std::string toUpper", "function_summary": "std::string toUpper from cpp_samples module", "function_content": "std::string toUpper(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(), ::toupper);\n    return result;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: Encryptor cleanup\n\nAnd this function summary:\n\nFunction Summary: std::string toUpper from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-002", "requirement_text": "Convert string to uppercase", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 2, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-006", "requirement_text": "Check encryptor initialization", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: Check encryptor initialization\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-016", "requirement_text": "TCP No-Delay option", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 17, "prompt": "Given the following requirement:\n\nRequirement: TCP No-Delay option\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-010", "requirement_text": "Configure data processor", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 5, "prompt": "Given the following requirement:\n\nRequirement: Configure data processor\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-001", "requirement_text": "Create empty data record", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: Create empty data record\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-SEC-011", "requirement_text": "RSA encryption implementation", "function_name": "BaseEncryptor", "function_summary": "BaseEncryptor implementation from security module", "function_content": "BaseEncryptor(EncryptionAlgorithm::RSA) {\n            std::cout << \"Created RSA encryptor\" << std::endl;\n        }", "is_correct": true, "confidence_score": 90, "prompt": "Given the following requirement:\n\nRequirement: RSA encryption implementation\n\nAnd this function summary:\n\nFunction Summary: BaseEncryptor implementation from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.9}
{"requirement_id": "REQ-DATA-004", "requirement_text": "Get all fields in record", "function_name": "bool initializeApp", "function_summary": "bool initializeApp from core module", "function_content": "bool initializeApp(const std::string& configPath) {\n    std::cout << \"Initializing app with config: \" << configPath << std::endl;\n    // Implementation would load configuration, set up resources, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 1, "prompt": "Given the following requirement:\n\nRequirement: Get all fields in record\n\nAnd this function summary:\n\nFunction Summary: bool initializeApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-NET-003", "requirement_text": "Connect to remote host", "function_name": "std::string concat", "function_summary": "std::string concat from cpp_samples module", "function_content": "std::string concat(const std::string& a, const std::string& b) {\n    return a + b;\n}", "is_correct": false, "confidence_score": 15, "prompt": "Given the following requirement:\n\nRequirement: Connect to remote host\n\nAnd this function summary:\n\nFunction Summary: std::string concat from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-UTIL-003", "requirement_text": "String splitting function", "function_name": "bool shutdownApp", "function_summary": "bool shutdownApp from core module", "function_content": "bool shutdownApp() {\n    std::cout << \"Shutting down app\" << std::endl;\n    // Implementation would release resources, save state, etc.\n    return true;\n}", "is_correct": false, "confidence_score": 14, "prompt": "Given the following requirement:\n\nRequirement: String splitting function\n\nAnd this function summary:\n\nFunction Summary: bool shutdownApp from core module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-DATA-007", "requirement_text": "Data processor cleanup", "function_name": "int multiply", "function_summary": "int multiply from cpp_samples module", "function_content": "int multiply(int a, int b) {\n    return a * b;\n}", "is_correct": false, "confidence_score": 4, "prompt": "Given the following requirement:\n\nRequirement: Data processor cleanup\n\nAnd this function summary:\n\nFunction Summary: int multiply from cpp_samples module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-APP-002", "requirement_text": "Application shutdown", "function_name": "bool setKey", "function_summary": "bool setKey from security module", "function_content": "bool setKey(const std::vector<uint8_t>& key) override {\n            // Check key length\n            size_t requiredKeySize = is256Bit_ ? 32 : 16;  // 256 bits = 32 bytes, 128 bits = 16 bytes\n            if (key.size() != requiredKeySize) {\n                std::cerr << \"Invalid key size for AES-\" << (is256Bit_ ? \"256\" : \"128\") \n                          << \". Expected \" << requiredKeySize << \" bytes, got \" \n                          << key.size() << \" bytes.\" << std::endl;\n                return false;\n            }\n            \n            key_ = key;\n            initialized_ = true;\n            std::cout << \"AES key set successfully\" << std::endl;\n            return true;\n        }", "is_correct": false, "confidence_score": 6, "prompt": "Given the following requirement:\n\nRequirement: Application shutdown\n\nAnd this function summary:\n\nFunction Summary: bool setKey from security module\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 0.0}
{"requirement_id": "REQ-ALG-001", "requirement_text": "Sort an array of integers", "function_name": "sortArray", "function_summary": "Sorts an array of integers in ascending order", "function_content": "void sortArray(int arr[], int size) {\n    // Implementation of quicksort algorithm\n    for (int i = 0; i < size - 1; i++) {\n        for (int j = 0; j < size - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                // Swap elements\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}", "is_correct": true, "confidence_score": 0.9, "prompt": "Given the following requirement:\n\nRequirement: Sort an array of integers\n\nAnd this function summary:\n\nFunction Summary: Sorts an array of integers in ascending order\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-004", "requirement_text": "Trim whitespace from string", "function_name": "trimString", "function_summary": "Removes leading and trailing whitespace from a string", "function_content": "std::string trimString(const std::string& input) {\n    // Find first non-whitespace character\n    size_t start = input.find_first_not_of(\" \\t\\n\\r\");\n    if (start == std::string::npos) {\n        return \"\";  // String contains only whitespace\n    }\n    \n    // Find last non-whitespace character\n    size_t end = input.find_last_not_of(\" \\t\\n\\r\");\n    \n    // Extract the substring\n    return input.substr(start, end - start + 1);\n}", "is_correct": true, "confidence_score": 0.75, "prompt": "Given the following requirement:\n\nRequirement: Trim whitespace from string\n\nAnd this function summary:\n\nFunction Summary: Removes leading and trailing whitespace from a string\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-002", "requirement_text": "Convert string to lowercase", "function_name": "toLowerCase", "function_summary": "Converts a string to lowercase", "function_content": "std::string toLowerCase(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(),\n                   [](unsigned char c) { return std::tolower(c); });\n    return result;\n}", "is_correct": true, "confidence_score": 0.74, "prompt": "Given the following requirement:\n\nRequirement: Convert string to lowercase\n\nAnd this function summary:\n\nFunction Summary: Converts a string to lowercase\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-003", "requirement_text": "Merge two sorted arrays", "function_name": "mergeSortedArrays", "function_summary": "Merges two sorted arrays into a single sorted array", "function_content": "std::vector<int> mergeSortedArrays(const std::vector<int>& arr1, const std::vector<int>& arr2) {\n    std::vector<int> result;\n    size_t i = 0, j = 0;\n    \n    // Compare elements from both arrays and merge in sorted order\n    while (i < arr1.size() && j < arr2.size()) {\n        if (arr1[i] <= arr2[j]) {\n            result.push_back(arr1[i++]);\n        } else {\n            result.push_back(arr2[j++]);\n        }\n    }\n    \n    // Add remaining elements from first array\n    while (i < arr1.size()) {\n        result.push_back(arr1[i++]);\n    }\n    \n    // Add remaining elements from second array\n    while (j < arr2.size()) {\n        result.push_back(arr2[j++]);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.89, "prompt": "Given the following requirement:\n\nRequirement: Merge two sorted arrays\n\nAnd this function summary:\n\nFunction Summary: Merges two sorted arrays into a single sorted array\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-004", "requirement_text": "Delete a file", "function_name": "deleteFile", "function_summary": "Deletes the file at the specified path", "function_content": "bool deleteFile(const std::string& filePath) {\n    return std::remove(filePath.c_str()) == 0;\n}", "is_correct": true, "confidence_score": 0.8, "prompt": "Given the following requirement:\n\nRequirement: Delete a file\n\nAnd this function summary:\n\nFunction Summary: Deletes the file at the specified path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-001", "requirement_text": "Convert string to uppercase", "function_name": "toUpperCase", "function_summary": "Converts a string to uppercase", "function_content": "std::string toUpperCase(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(),\n                   [](unsigned char c) { return std::toupper(c); });\n    return result;\n}", "is_correct": true, "confidence_score": 0.82, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: Converts a string to uppercase\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-004", "requirement_text": "Delete a file", "function_name": "deleteFile", "function_summary": "Deletes the file at the specified path", "function_content": "bool deleteFile(const std::string& filePath) {\n    return std::remove(filePath.c_str()) == 0;\n}", "is_correct": true, "confidence_score": 0.92, "prompt": "Given the following requirement:\n\nRequirement: Delete a file\n\nAnd this function summary:\n\nFunction Summary: Deletes the file at the specified path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-003", "requirement_text": "Merge two sorted arrays", "function_name": "mergeSortedArrays", "function_summary": "Merges two sorted arrays into a single sorted array", "function_content": "std::vector<int> mergeSortedArrays(const std::vector<int>& arr1, const std::vector<int>& arr2) {\n    std::vector<int> result;\n    size_t i = 0, j = 0;\n    \n    // Compare elements from both arrays and merge in sorted order\n    while (i < arr1.size() && j < arr2.size()) {\n        if (arr1[i] <= arr2[j]) {\n            result.push_back(arr1[i++]);\n        } else {\n            result.push_back(arr2[j++]);\n        }\n    }\n    \n    // Add remaining elements from first array\n    while (i < arr1.size()) {\n        result.push_back(arr1[i++]);\n    }\n    \n    // Add remaining elements from second array\n    while (j < arr2.size()) {\n        result.push_back(arr2[j++]);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.8, "prompt": "Given the following requirement:\n\nRequirement: Merge two sorted arrays\n\nAnd this function summary:\n\nFunction Summary: Merges two sorted arrays into a single sorted array\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-001", "requirement_text": "Sort an array of integers", "function_name": "sortArray", "function_summary": "Sorts an array of integers in ascending order", "function_content": "void sortArray(int arr[], int size) {\n    // Implementation of quicksort algorithm\n    for (int i = 0; i < size - 1; i++) {\n        for (int j = 0; j < size - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                // Swap elements\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}", "is_correct": true, "confidence_score": 0.84, "prompt": "Given the following requirement:\n\nRequirement: Sort an array of integers\n\nAnd this function summary:\n\nFunction Summary: Sorts an array of integers in ascending order\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-004", "requirement_text": "Calculate factorial of a number", "function_name": "calculateFactorial", "function_summary": "Calculates the factorial of a given number", "function_content": "int calculateFactorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n * calculateFactorial(n - 1);\n}", "is_correct": true, "confidence_score": 0.85, "prompt": "Given the following requirement:\n\nRequirement: Calculate factorial of a number\n\nAnd this function summary:\n\nFunction Summary: Calculates the factorial of a given number\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-002", "requirement_text": "Write data to a file", "function_name": "writeToFile", "function_summary": "Writes data to a specified file path", "function_content": "bool writeToFile(const std::string& filePath, const std::string& data) {\n    std::ofstream file(filePath);\n    if (!file.is_open()) {\n        return false;\n    }\n    \n    file << data;\n    file.close();\n    \n    return true;\n}", "is_correct": true, "confidence_score": 0.85, "prompt": "Given the following requirement:\n\nRequirement: Write data to a file\n\nAnd this function summary:\n\nFunction Summary: Writes data to a specified file path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-004", "requirement_text": "Delete a file", "function_name": "deleteFile", "function_summary": "Deletes the file at the specified path", "function_content": "bool deleteFile(const std::string& filePath) {\n    return std::remove(filePath.c_str()) == 0;\n}", "is_correct": true, "confidence_score": 0.82, "prompt": "Given the following requirement:\n\nRequirement: Delete a file\n\nAnd this function summary:\n\nFunction Summary: Deletes the file at the specified path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-003", "requirement_text": "Split string by delimiter", "function_name": "splitString", "function_summary": "Splits a string by the specified delimiter", "function_content": "std::vector<std::string> splitString(const std::string& input, char delimiter) {\n    std::vector<std::string> result;\n    std::stringstream ss(input);\n    std::string token;\n    \n    while (std::getline(ss, token, delimiter)) {\n        result.push_back(token);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.91, "prompt": "Given the following requirement:\n\nRequirement: Split string by delimiter\n\nAnd this function summary:\n\nFunction Summary: Splits a string by the specified delimiter\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-001", "requirement_text": "Sort an array of integers", "function_name": "sortArray", "function_summary": "Sorts an array of integers in ascending order", "function_content": "void sortArray(int arr[], int size) {\n    // Implementation of quicksort algorithm\n    for (int i = 0; i < size - 1; i++) {\n        for (int j = 0; j < size - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                // Swap elements\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}", "is_correct": true, "confidence_score": 0.89, "prompt": "Given the following requirement:\n\nRequirement: Sort an array of integers\n\nAnd this function summary:\n\nFunction Summary: Sorts an array of integers in ascending order\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-002", "requirement_text": "Write data to a file", "function_name": "writeToFile", "function_summary": "Writes data to a specified file path", "function_content": "bool writeToFile(const std::string& filePath, const std::string& data) {\n    std::ofstream file(filePath);\n    if (!file.is_open()) {\n        return false;\n    }\n    \n    file << data;\n    file.close();\n    \n    return true;\n}", "is_correct": true, "confidence_score": 0.94, "prompt": "Given the following requirement:\n\nRequirement: Write data to a file\n\nAnd this function summary:\n\nFunction Summary: Writes data to a specified file path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-001", "requirement_text": "Read data from a file", "function_name": "readFromFile", "function_summary": "Reads data from a specified file path", "function_content": "std::string readFromFile(const std::string& filePath) {\n    std::ifstream file(filePath);\n    if (!file.is_open()) {\n        throw std::runtime_error(\"Could not open file: \" + filePath);\n    }\n    \n    std::stringstream buffer;\n    buffer << file.rdbuf();\n    file.close();\n    \n    return buffer.str();\n}", "is_correct": true, "confidence_score": 0.82, "prompt": "Given the following requirement:\n\nRequirement: Read data from a file\n\nAnd this function summary:\n\nFunction Summary: Reads data from a specified file path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-004", "requirement_text": "Trim whitespace from string", "function_name": "trimString", "function_summary": "Removes leading and trailing whitespace from a string", "function_content": "std::string trimString(const std::string& input) {\n    // Find first non-whitespace character\n    size_t start = input.find_first_not_of(\" \\t\\n\\r\");\n    if (start == std::string::npos) {\n        return \"\";  // String contains only whitespace\n    }\n    \n    // Find last non-whitespace character\n    size_t end = input.find_last_not_of(\" \\t\\n\\r\");\n    \n    // Extract the substring\n    return input.substr(start, end - start + 1);\n}", "is_correct": true, "confidence_score": 0.95, "prompt": "Given the following requirement:\n\nRequirement: Trim whitespace from string\n\nAnd this function summary:\n\nFunction Summary: Removes leading and trailing whitespace from a string\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-003", "requirement_text": "Check if file exists", "function_name": "fileExists", "function_summary": "Checks if a file exists at the specified path", "function_content": "bool fileExists(const std::string& filePath) {\n    std::ifstream file(filePath);\n    return file.good();\n}", "is_correct": true, "confidence_score": 0.75, "prompt": "Given the following requirement:\n\nRequirement: Check if file exists\n\nAnd this function summary:\n\nFunction Summary: Checks if a file exists at the specified path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-004", "requirement_text": "Calculate factorial of a number", "function_name": "calculateFactorial", "function_summary": "Calculates the factorial of a given number", "function_content": "int calculateFactorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n * calculateFactorial(n - 1);\n}", "is_correct": true, "confidence_score": 0.81, "prompt": "Given the following requirement:\n\nRequirement: Calculate factorial of a number\n\nAnd this function summary:\n\nFunction Summary: Calculates the factorial of a given number\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-003", "requirement_text": "Check if file exists", "function_name": "fileExists", "function_summary": "Checks if a file exists at the specified path", "function_content": "bool fileExists(const std::string& filePath) {\n    std::ifstream file(filePath);\n    return file.good();\n}", "is_correct": true, "confidence_score": 0.92, "prompt": "Given the following requirement:\n\nRequirement: Check if file exists\n\nAnd this function summary:\n\nFunction Summary: Checks if a file exists at the specified path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-003", "requirement_text": "Split string by delimiter", "function_name": "splitString", "function_summary": "Splits a string by the specified delimiter", "function_content": "std::vector<std::string> splitString(const std::string& input, char delimiter) {\n    std::vector<std::string> result;\n    std::stringstream ss(input);\n    std::string token;\n    \n    while (std::getline(ss, token, delimiter)) {\n        result.push_back(token);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.73, "prompt": "Given the following requirement:\n\nRequirement: Split string by delimiter\n\nAnd this function summary:\n\nFunction Summary: Splits a string by the specified delimiter\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-003", "requirement_text": "Merge two sorted arrays", "function_name": "mergeSortedArrays", "function_summary": "Merges two sorted arrays into a single sorted array", "function_content": "std::vector<int> mergeSortedArrays(const std::vector<int>& arr1, const std::vector<int>& arr2) {\n    std::vector<int> result;\n    size_t i = 0, j = 0;\n    \n    // Compare elements from both arrays and merge in sorted order\n    while (i < arr1.size() && j < arr2.size()) {\n        if (arr1[i] <= arr2[j]) {\n            result.push_back(arr1[i++]);\n        } else {\n            result.push_back(arr2[j++]);\n        }\n    }\n    \n    // Add remaining elements from first array\n    while (i < arr1.size()) {\n        result.push_back(arr1[i++]);\n    }\n    \n    // Add remaining elements from second array\n    while (j < arr2.size()) {\n        result.push_back(arr2[j++]);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.73, "prompt": "Given the following requirement:\n\nRequirement: Merge two sorted arrays\n\nAnd this function summary:\n\nFunction Summary: Merges two sorted arrays into a single sorted array\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-002", "requirement_text": "Convert string to lowercase", "function_name": "toLowerCase", "function_summary": "Converts a string to lowercase", "function_content": "std::string toLowerCase(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(),\n                   [](unsigned char c) { return std::tolower(c); });\n    return result;\n}", "is_correct": true, "confidence_score": 0.73, "prompt": "Given the following requirement:\n\nRequirement: Convert string to lowercase\n\nAnd this function summary:\n\nFunction Summary: Converts a string to lowercase\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-003", "requirement_text": "Split string by delimiter", "function_name": "splitString", "function_summary": "Splits a string by the specified delimiter", "function_content": "std::vector<std::string> splitString(const std::string& input, char delimiter) {\n    std::vector<std::string> result;\n    std::stringstream ss(input);\n    std::string token;\n    \n    while (std::getline(ss, token, delimiter)) {\n        result.push_back(token);\n    }\n    \n    return result;\n}", "is_correct": true, "confidence_score": 0.72, "prompt": "Given the following requirement:\n\nRequirement: Split string by delimiter\n\nAnd this function summary:\n\nFunction Summary: Splits a string by the specified delimiter\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-001", "requirement_text": "Convert string to uppercase", "function_name": "toUpperCase", "function_summary": "Converts a string to uppercase", "function_content": "std::string toUpperCase(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(),\n                   [](unsigned char c) { return std::toupper(c); });\n    return result;\n}", "is_correct": true, "confidence_score": 0.77, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: Converts a string to uppercase\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-002", "requirement_text": "Search for an element in an array", "function_name": "binarySearch", "function_summary": "Performs binary search on a sorted array to find an element", "function_content": "int binarySearch(int arr[], int left, int right, int target) {\n    while (left <= right) {\n        int mid = left + (right - left) / 2;\n        \n        // Check if target is present at mid\n        if (arr[mid] == target)\n            return mid;\n        \n        // If target greater, ignore left half\n        if (arr[mid] < target)\n            left = mid + 1;\n        // If target is smaller, ignore right half\n        else\n            right = mid - 1;\n    }\n    \n    // Element not present\n    return -1;\n}", "is_correct": true, "confidence_score": 0.82, "prompt": "Given the following requirement:\n\nRequirement: Search for an element in an array\n\nAnd this function summary:\n\nFunction Summary: Performs binary search on a sorted array to find an element\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-004", "requirement_text": "Calculate factorial of a number", "function_name": "calculateFactorial", "function_summary": "Calculates the factorial of a given number", "function_content": "int calculateFactorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n * calculateFactorial(n - 1);\n}", "is_correct": true, "confidence_score": 0.75, "prompt": "Given the following requirement:\n\nRequirement: Calculate factorial of a number\n\nAnd this function summary:\n\nFunction Summary: Calculates the factorial of a given number\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-STR-001", "requirement_text": "Convert string to uppercase", "function_name": "toUpperCase", "function_summary": "Converts a string to uppercase", "function_content": "std::string toUpperCase(const std::string& input) {\n    std::string result = input;\n    std::transform(result.begin(), result.end(), result.begin(),\n                   [](unsigned char c) { return std::toupper(c); });\n    return result;\n}", "is_correct": true, "confidence_score": 0.73, "prompt": "Given the following requirement:\n\nRequirement: Convert string to uppercase\n\nAnd this function summary:\n\nFunction Summary: Converts a string to uppercase\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-ALG-002", "requirement_text": "Search for an element in an array", "function_name": "binarySearch", "function_summary": "Performs binary search on a sorted array to find an element", "function_content": "int binarySearch(int arr[], int left, int right, int target) {\n    while (left <= right) {\n        int mid = left + (right - left) / 2;\n        \n        // Check if target is present at mid\n        if (arr[mid] == target)\n            return mid;\n        \n        // If target greater, ignore left half\n        if (arr[mid] < target)\n            left = mid + 1;\n        // If target is smaller, ignore right half\n        else\n            right = mid - 1;\n    }\n    \n    // Element not present\n    return -1;\n}", "is_correct": true, "confidence_score": 0.79, "prompt": "Given the following requirement:\n\nRequirement: Search for an element in an array\n\nAnd this function summary:\n\nFunction Summary: Performs binary search on a sorted array to find an element\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
{"requirement_id": "REQ-FILE-001", "requirement_text": "Read data from a file", "function_name": "readFromFile", "function_summary": "Reads data from a specified file path", "function_content": "std::string readFromFile(const std::string& filePath) {\n    std::ifstream file(filePath);\n    if (!file.is_open()) {\n        throw std::runtime_error(\"Could not open file: \" + filePath);\n    }\n    \n    std::stringstream buffer;\n    buffer << file.rdbuf();\n    file.close();\n    \n    return buffer.str();\n}", "is_correct": true, "confidence_score": 0.87, "prompt": "Given the following requirement:\n\nRequirement: Read data from a file\n\nAnd this function summary:\n\nFunction Summary: Reads data from a specified file path\n\nOn a scale of 0 to 100, rate how confident you are that this function implements the requirement.\nOnly return a single integer number between 0 and 100, where 0 means no relationship and 100 means perfect match.\n", "reward": 1.0}
